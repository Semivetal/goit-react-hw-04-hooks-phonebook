{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","App.module.css","hooks/useLocalStorage.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","useLocalStorage","key","defaultValue","useState","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","ContactForm","onSubmit","name","setName","number","setNumber","nameInputId","uuid","v1","numberInputId","handleChange","evt","currentTarget","value","reset","preventDefault","className","styles","contactForm","htmlFor","input","type","id","pattern","title","required","onChange","button","Filter","inputId","labelId","form","filter","filterInput","ContactList","contacts","onDeleteContact","contactList","map","contactItem","contactName","contactNumber","contactBtn","onClick","App","setContacts","setFilter","visibleContacts","lowerCasedFilter","toLocaleLowerCase","contact","includes","getVisibleContacts","foundNames","toLowerCase","lowerName","alert","event","contactId","prevContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,YAAc,iCAAiC,YAAc,iCAAiC,cAAgB,mCAAmC,WAAa,kC,iBCA/ND,EAAOC,QAAU,CAAC,OAAS,4BAA4B,MAAQ,2BAA2B,YAAc,mC,iBCAxGD,EAAOC,QAAU,CAAC,YAAc,4BAA4B,KAAO,qBAAqB,MAAQ,wB,mBCAhGD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,QAAU,uB,iJCapCC,EAZS,SAACC,EAAKC,GAC5B,MAA0BC,oBACxB,kCAAMC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQP,WAA7C,QAAsDC,KADxD,mBAAOO,EAAP,KAAcC,EAAd,KAQA,OAJAC,qBAAU,WACRL,OAAOC,aAAaK,QAAQX,EAAKG,KAAKS,UAAUJ,MAC/C,CAACR,EAAKQ,IAEF,CAACA,EAAOC,I,uBCwDFI,MA/Df,YAAoC,IAAbC,EAAY,EAAZA,SACrB,EAAwBZ,mBAAS,IAAjC,mBAAOa,EAAP,KAAaC,EAAb,KACA,EAA4Bd,mBAAS,IAArC,mBAAOe,EAAP,KAAeC,EAAf,KAEMC,EAAcC,YAAKC,KACnBC,EAAgBF,YAAKC,KAErBE,EAAe,SAACC,GACpB,MAAwBA,EAAIC,cAApBC,EAAR,EAAQA,MAAOX,EAAf,EAAeA,KACF,SAATA,GACFC,EAAQU,GAEG,WAATX,GACFG,EAAUQ,IAURC,EAAQ,WACZX,EAAQ,IACRE,EAAU,KAGZ,OACE,uBAAMJ,SAZa,SAACU,GACpBA,EAAII,iBACJd,EAASC,EAAME,GACfU,KAS8BE,UAAWC,IAAOC,YAAhD,UACE,uBAAOC,QAASb,EAAhB,kBACA,uBACEU,UAAWC,IAAOG,MAClBP,MAAOX,EACPmB,KAAK,OACLnB,KAAK,OACLoB,GAAIhB,EACJiB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUhB,IAGZ,uBAAOS,QAASV,EAAhB,oBACA,uBACEO,UAAWC,IAAOG,MAClBP,MAAOT,EACPiB,KAAK,MACLnB,KAAK,SACLoB,GAAIb,EACJc,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUhB,IAGZ,wBAAQM,UAAWC,IAAOU,OAAQN,KAAK,SAAvC,6B,gBC3BSO,EA5BA,SAAC,GAAyB,IAAvBf,EAAsB,EAAtBA,MAAOa,EAAe,EAAfA,SACjBG,EAAUtB,YAAKC,KACfsB,EAAUvB,YAAKC,KAErB,OACE,mCACE,sBAAKQ,UAAWC,IAAOc,KAAvB,UACE,uBAAOZ,QAASW,EAASd,UAAWC,IAAOe,OAA3C,8BAGA,uBACEV,GAAIO,EACJR,KAAK,OACLR,MAAOA,EACPX,KAAK,SACLwB,SAAUA,EACVV,UAAWC,IAAOgB,oB,gBCKbC,EAvBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,gBAAb,OAClB,oBAAIpB,UAAWC,IAAOoB,YAAtB,SACGF,EAASG,KAAI,gBAAGhB,EAAH,EAAGA,GAAIpB,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACZ,qBAAaY,UAAWC,IAAOsB,YAA/B,UACE,sBAAMvB,UAAWC,IAAOuB,YAAxB,SAAsCtC,IACtC,sBAAMc,UAAWC,IAAOwB,cAAxB,SAAwCrC,IACxC,wBACEY,UAAWC,IAAOyB,WAClBrB,KAAK,SACLsB,QAAS,kBAAMP,EAAgBd,IAHjC,sBAHOA,SCoDAsB,MAlDf,WACE,MAAgC1D,EAAgB,WAAY,IAA5D,mBAAOiD,EAAP,KAAiBU,EAAjB,KACA,EAA4BxD,mBAAS,IAArC,mBAAO2C,EAAP,KAAec,EAAf,KAmCMC,EAPqB,WACzB,IAAMC,EAAmBhB,EAAOiB,oBAChC,OAAOd,EAASH,QAAO,SAACkB,GAAD,OACrBA,EAAQhD,KAAK+C,oBAAoBE,SAASH,MAItBI,GAExB,OACE,sBAAKpC,UAAWC,IAAO2B,IAAvB,UACE,2CACA,cAAC,EAAD,CAAa3C,SAlCE,SAACC,EAAME,GACxB,IAAMiD,EAAalB,EAASG,KAAI,SAACY,GAAD,OAAaA,EAAQhD,KAAKoD,iBACpDC,EAAYrD,EAAK+C,oBACvB,GAAII,EAAWF,SAASI,GACtB,OAAOC,MAAM,GAAD,OAAItD,EAAJ,4BAGd,IAAMgD,EAAU,CACd5B,GAAIf,YAAKC,KACTN,OACAE,UAGFyC,GAAY,SAACV,GAAD,OAAee,GAAf,mBAA2Bf,UAsBrC,0CACA,cAAC,EAAD,CAAQtB,MAAOmB,EAAQN,SAxCN,SAAC+B,GACpBX,EAAUW,EAAM7C,cAAcC,UAwC5B,cAAC,EAAD,CAAasB,SAAUY,EAAiBX,gBArBtB,SAACsB,GACrBb,GAAY,SAACc,GAAD,OACVA,EAAa3B,QAAO,SAACkB,GAAD,OAAaA,EAAQ5B,KAAOoC,eCtBvCE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.36c66bf5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3tTVR\",\"contactItem\":\"ContactList_contactItem__2d0Z8\",\"contactName\":\"ContactList_contactName__2wp8D\",\"contactNumber\":\"ContactList_contactNumber__2Vil7\",\"contactBtn\":\"ContactList_contactBtn__39xTL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__-Mjcg\",\"input\":\"ContactForm_input__2MunF\",\"contactForm\":\"ContactForm_contactForm__32wA0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__3R7x1\",\"form\":\"Filter_form__-ycYh\",\"label\":\"Filter_label__3Ozx2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__NkEQ3\",\"context\":\"App_context__3Cpv8\"};","import { useEffect, useState } from \"react\";\n\nconst useLocalStorage = (key, defaultValue) => {\n  const [state, setState] = useState(\n    () => JSON.parse(window.localStorage.getItem(key)) ?? defaultValue\n  );\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n};\n\nexport default useLocalStorage;\n","import { useState } from \"react\";\nimport { v1 as uuid, v1 } from \"uuid\";\nimport styles from \"./ContactForm.module.css\";\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const nameInputId = uuid(v1);\n  const numberInputId = uuid(v1);\n\n  const handleChange = (evt) => {\n    const { value, name } = evt.currentTarget;\n    if (name === \"name\") {\n      setName(value);\n    }\n    if (name === \"number\") {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    onSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.contactForm}>\n      <label htmlFor={nameInputId}>Name</label>\n      <input\n        className={styles.input}\n        value={name}\n        type=\"text\"\n        name=\"name\"\n        id={nameInputId}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={handleChange}\n      />\n\n      <label htmlFor={numberInputId}>Number</label>\n      <input\n        className={styles.input}\n        value={number}\n        type=\"tel\"\n        name=\"number\"\n        id={numberInputId}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        onChange={handleChange}\n      />\n\n      <button className={styles.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { v1 as uuid, v1 } from \"uuid\";\nimport styles from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => {\n  const inputId = uuid(v1);\n  const labelId = uuid(v1);\n\n  return (\n    <>\n      <div className={styles.form}>\n        <label htmlFor={labelId} className={styles.filter}>\n          Find contacts by\n        </label>\n        <input\n          id={inputId}\n          type=\"text\"\n          value={value}\n          name=\"filter\"\n          onChange={onChange}\n          className={styles.filterInput}\n        />\n      </div>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={styles.contactList}>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} className={styles.contactItem}>\n        <span className={styles.contactName}>{name}</span>\n        <span className={styles.contactNumber}>{number}</span>\n        <button\n          className={styles.contactBtn}\n          type=\"button\"\n          onClick={() => onDeleteContact(id)}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  OnDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import styles from \"./App.module.css\";\nimport React, { useState } from \"react\";\nimport { v1 as uuid, v1 } from \"uuid\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nfunction App() {\n  const [contacts, setContacts] = useLocalStorage(\"contacts\", []);\n  const [filter, setFilter] = useState(\"\");\n\n  const changeFilter = (event) => {\n    setFilter(event.currentTarget.value);\n  };\n\n  const addContact = (name, number) => {\n    const foundNames = contacts.map((contact) => contact.name.toLowerCase());\n    const lowerName = name.toLocaleLowerCase();\n    if (foundNames.includes(lowerName)) {\n      return alert(`${name} is already in contacts`);\n    }\n\n    const contact = {\n      id: uuid(v1),\n      name,\n      number,\n    };\n\n    setContacts((contacts) => [contact, ...contacts]);\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts((prevContacts) =>\n      prevContacts.filter((contact) => contact.id !== contactId)\n    );\n  };\n\n  const getVisibleContacts = () => {\n    const lowerCasedFilter = filter.toLocaleLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLocaleLowerCase().includes(lowerCasedFilter)\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <div className={styles.App}>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList contacts={visibleContacts} onDeleteContact={deleteContact} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}